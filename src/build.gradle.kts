/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
    // `war`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://artifactory.niis.org/xroad-maven-releases")
    }

    maven {
        url = uri("https://artifactory.niis.org/xroad-maven-snapshots")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

// val buildProfile: String? by project  

// apply(from = "profile-${buildProfile ?: "itest"}.gradle.kts")  

dependencies {
    implementation(libs.org.springframework.boot.spring.boot.starter.web) 
    implementation(libs.org.springframework.boot.spring.boot.starter.aop)
    implementation(libs.org.niis.xrd4j.common)
    implementation(libs.org.niis.xrd4j.client)
    implementation(libs.org.niis.xrd4j.server)
    implementation(libs.org.niis.xrd4j.rest)
    implementation(libs.org.xmlunit.xmlunit.assertj) {
        constraints {
            implementation("org.assertj:assertj-core:3.16.1")
            implementation("net.bytebuddy:byte-buddy:1.10.5")
        }
        // include (group="org.assertj", module="assertj-core", version="3.16.1")
    }
    implementation(libs.org.projectlombok.lombok)
    // implementation("org.slf4j:slf4j-log4j12:1.7.29")
    // implementation("org.xmlunit.xmlunit.assertj:org.assertj:assertj-core") {
    //     version {
    //         strictly("3.16.1")
    //     }
    // }
    annotationProcessor(libs.org.projectlombok.lombok)
    testImplementation(libs.org.springframework.boot.spring.boot.starter.test) {
        exclude (group= "com.vaadin.external.google", module= "android-json")
    }
    testImplementation(libs.com.github.tomakehurst.wiremock)
    testImplementation(libs.commons.io.commons.io)
    testImplementation(libs.com.github.stefanbirkner.system.rules)
    testImplementation(libs.org.skyscreamer.jsonassert) {
        exclude (group = "com.vaadin.external.google", module = "android-json")
    }
    testImplementation(libs.org.xmlunit.xmlunit.core)
    testImplementation(libs.org.xmlunit.xmlunit.matchers)
    testImplementation(libs.com.jayway.jsonpath.json.path.assert)
    testImplementation(libs.com.jayway.jsonpath.json.path)
    compileOnly(libs.org.springframework.boot.spring.boot.starter.tomcat)
    compileOnly(libs.org.apache.tomcat.embed.tomcat.embed.jasper)
    // annotationProcessor(libs.org.projectlombok)

}

group = "org.niis"
version = "1.1.0-SNAPSHOT"
description = "REST Adapter Service"
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}
