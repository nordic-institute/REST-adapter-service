/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    // `maven-publish`
    // `war`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://artifactory.niis.org/xroad-maven-releases")
    }

    maven {
        url = uri("https://artifactory.niis.org/xroad-maven-snapshots")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

ext {
    set("xrd4j.version", "0.3.0")
    set("java.version", "1.8")
    set("jdk.version", "1.8")
    set("xmlunit.version", "2.7.0")
    set("failsafe.version", "2.19.1")
    set("project.build.sourceEncoding", "UTF-8")
    set("project.build.resourceEncoding", "UTF-8")
    set("project.reporting.outputEncoding", "UTF-8")
    set("tomcat.version", "9.0.37")
    set("app.home", "/var/lib/tomcat/webapps")
    // set("sonar.junit.reportPaths", "target/failsafe-reports,target/surefire-reports")
    set("server.port","9898")
}


dependencies {
    implementation(libs.org.springframework.boot.spring.boot.starter.web) 
    implementation(libs.org.springframework.boot.spring.boot.starter.aop)
    implementation(libs.org.springframework.boot.spring.boot.starter.tomcat)
    implementation(libs.org.projectlombok.lombok)
    implementation(libs.org.niis.xrd4j.common)
    implementation(libs.org.niis.xrd4j.client)
    implementation(libs.org.niis.xrd4j.server)
    implementation(libs.org.niis.xrd4j.rest)
    implementation(libs.org.xmlunit.xmlunit.assertj) {
        constraints {
            implementation("org.assertj:assertj-core:3.16.1")
            implementation("net.bytebuddy:byte-buddy:1.10.5")
        }
    }
    annotationProcessor(libs.org.projectlombok.lombok)
    testImplementation(libs.org.springframework.boot.spring.boot.starter.test) {
        exclude (group= "com.vaadin.external.google", module= "android-json")
    }
    testImplementation(libs.org.apache.tomcat.embed.tomcat.embed.jasper)
    testImplementation(libs.com.github.tomakehurst.wiremock)
    testImplementation(libs.commons.io.commons.io)
    testImplementation(libs.com.github.stefanbirkner.system.rules)
    testImplementation(libs.org.skyscreamer.jsonassert) {
        exclude (group = "com.vaadin.external.google", module = "android-json")
    }
    testImplementation(libs.org.xmlunit.xmlunit.core)
    testImplementation(libs.org.xmlunit.xmlunit.matchers)
    testImplementation(libs.com.jayway.jsonpath.json.path.assert)
    testImplementation(libs.com.jayway.jsonpath.json.path)
    testAnnotationProcessor(libs.org.projectlombok.lombok)

}

group = "org.niis"
version = "1.1.0-SNAPSHOT"
description = "REST Adapter Service"
java.sourceCompatibility = JavaVersion.VERSION_1_8

// publishing {
//     publications.create<MavenPublication>("maven") {
//         from(components["java"])
//     }
// }

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}


tasks.test {
    // useJUnitPlatform()
    // exclude ("/org/niis/xroad/restadapterservice/*")
  
    include("org/niis/xroad/restadapterservice/util/*")
}

tasks.processTestResources {
    // Include and filter `application-test-properties/*`
    filesMatching("application-test-properties/*") {
        expand(project.properties) // Enable filtering
    }
    
        

    // // Include `application-test-keys/*` without filtering
    // filesMatching("application-test-keys/*") {
    //     filteringCharset = null // Disable filtering
    // }

    // Exclude `application-test-properties/*` and `application-test-keys/*` from other resources
    // exclude("application-test-properties/*", "application-test-keys/*")
    // from("src/test/ressources/application-test-properties") {
    //     include("**/*.properties")
    // }
    // info("$buildDir/resources/test/application-test-")
}