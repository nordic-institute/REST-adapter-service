<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.niis</groupId>
    <artifactId>rest-adapter-service</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <name>REST Adapter Service</name>
    <description>
        REST Adapter Service component translates between X-Road and REST protocols. X-Road versions 6.4 and above are
        supported.
    </description>
    <inceptionYear>2018</inceptionYear>
    <url>https://github.com/nordic-institute/REST-adapter-service</url>
    <packaging>war</packaging>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.3.RELEASE</version>
    </parent>
    <properties>
        <xrd4j.version>0.3.0</xrd4j.version>
        <java.version>1.8</java.version>
        <jdk.version>1.8</jdk.version>
        <xmlunit.version>2.7.0</xmlunit.version>
        <failsafe.version>2.19.1</failsafe.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <tomcat.version>9.0.37</tomcat.version>
        <app.home>/var/lib/tomcat/webapps</app.home>
        <sonar.junit.reportPaths>target/failsafe-reports,target/surefire-reports</sonar.junit.reportPaths>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- To compile JSP files -->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.20</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.niis.xrd4j</groupId>
            <artifactId>common</artifactId>
            <version>${xrd4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.niis.xrd4j</groupId>
            <artifactId>client</artifactId>
            <version>${xrd4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.niis.xrd4j</groupId>
            <artifactId>server</artifactId>
            <version>${xrd4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.niis.xrd4j</groupId>
            <artifactId>rest</artifactId>
            <version>${xrd4j.version}</version>
        </dependency>

        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>1.58</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.6</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.stefanbirkner</groupId>
            <artifactId>system-rules</artifactId>
            <version>1.16.0</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.skyscreamer/jsonassert -->
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>1.5.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.xmlunit</groupId>
            <artifactId>xmlunit-core</artifactId>
            <version>${xmlunit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.xmlunit</groupId>
            <artifactId>xmlunit-matchers</artifactId>
            <version>${xmlunit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.xmlunit</groupId>
            <artifactId>xmlunit-assertj</artifactId>
            <version>${xmlunit.version}</version>
        </dependency>

        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>2.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.2.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>
    <scm>
        <connection>scm:git:git@github.com:nordic-institute/REST-adapter-service.git</connection>
        <developerConnection>scm:git:git@github.com:nordic-institute/REST-adapter-service.git</developerConnection>
        <url>git@github.com:nordic-institute/REST-adapter-service.git</url>
    </scm>
    <developers>
        <developer>
            <id>niis</id>
            <name>Nordic Institute for Interoperability Solutions (NIIS)</name>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>+2</timezone>
        </developer>
        <developer>
            <id>vrk</id>
            <name>Population Register Centre (VRK)</name>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>+2</timezone>
        </developer>
        <developer>
            <id>petkivim</id>
            <name>Petteri Kivim√§ki</name>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
            <timezone>+2</timezone>
        </developer>
    </developers>
    <build>
        <filters>
            <filter>src/main/filters/default.properties</filter>
        </filters>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.9</version>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>6.0.2</version>
                <configuration>
                    <cveValidForHours>12</cveValidForHours>
                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                    <enableExperimental>false</enableExperimental>
                    <suppressionFiles>
                        <suppressionFile>${project.basedir}/dependency-check-suppressions.xml</suppressionFile>
                    </suppressionFiles>
                    <formats>
                        <format>HTML</format>
                        <format>XML</format>
                    </formats>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.1.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.36.1</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <resourceExcludes>**/*.properties</resourceExcludes>
                    <configLocation>checkstyle-config.xml</configLocation>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <id>copy-license-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/classes/META-INF</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>../</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>3RD-PARTY-NOTICES.txt</include>
                                        <include>LICENSE</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-config-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/config/etc/rest-adapter-service</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/profiles/plaintext</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>src/main/packages/config</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                            <filters>
                                <filter>src/main/filters/default.properties</filter>
                            </filters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-integration-test-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/integration-test-profile</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/profiles/${adapter.profile.dir}</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <filters>
                                <filter>src/main/filters/integration-test.properties</filter>
                            </filters>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-control-resources-xenial</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/packages/deb/control-xenial</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/packages/deb/control</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>src/main/packages/deb/control-xenial
                                    </directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-control-resources-trusty</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.basedir}/target/packages/deb/control-trusty</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/packages/deb/control</directory>
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>src/main/packages/deb/control-trusty
                                    </directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <header>com/mycila/maven/plugin/license/templates/MIT.txt</header>
                    <properties>
                        <owner>Nordic Institute for Interoperability Solutions (NIIS)</owner>
                    </properties>
                    <skipExistingHeaders>false</skipExistingHeaders>
                    <includes>
                        <include>**/*.java</include>
                    </includes>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                    </mapping>
                </configuration>
                <executions>
                    <execution>
                        <id>license-headers</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <defaultGoal>package</defaultGoal>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>application-test-properties/*</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>application-test-keys/*</include>
                </includes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>application-test-properties/*</exclude>
                    <exclude>application-test-keys/*</exclude>
                </excludes>
            </testResource>
        </testResources>
    </build>
    <profiles>
        <profile>
            <id>package-rpm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>2.1.5</version>
                        <executions>
                            <execution>
                                <id>generate-rpm</id>
                                <!-- moved to install-phase to allow verify-phase failure to prevent packaging-->
                                <phase>install</phase>
                                <goals>
                                    <goal>rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <license>MIT License</license>
                            <distribution>RHEL</distribution>
                            <!-- version comes from above -->
                            <group>System Environment/Libraries</group>
                            <packager>Nordic Institute for Interoperability Solutions (NIIS)</packager>
                            <vendor>Nordic Institute for Interoperability Solutions (NIIS)</vendor>
                            <url>${project.url}</url>
                            <defineStatements>
                                <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                            </defineStatements>
                            <requires>
                                <require>jre-1.8.0-headless</require>
                            </requires>
                            <mappings>
                                <mapping>
                                    <directory>/usr/lib/rest-adapter-service</directory>
                                    <filemode>640</filemode>
                                    <username>root</username>
                                    <groupname>rest-adapter-service</groupname>
                                    <directoryIncluded>false</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>target/rest-adapter-service-${project.version}.war</location>
                                            <destination>rest-adapter-service.war</destination>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/usr/bin</directory>
                                    <filemode>755</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <directoryIncluded>false</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>src/main/packages/systemd/rest-adapter-service</location>
                                        </source>
                                    </sources>
                                </mapping>

                                <mapping>
                                    <directory>%{_unitdir}</directory>
                                    <directoryIncluded>false</directoryIncluded>
                                    <filemode>644</filemode>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <directoryIncluded>false</directoryIncluded>
                                    <sources>
                                        <source>
                                            <location>src/main/packages/systemd/rest-adapter-service.service</location>
                                        </source>
                                    </sources>
                                </mapping>

                                <mapping>
                                    <directory>/etc/rest-adapter-service</directory>
                                    <filemode>640</filemode>
                                    <username>root</username>
                                    <groupname>rest-adapter-service</groupname>
                                    <directoryIncluded>false</directoryIncluded>
                                    <configuration>noreplace</configuration>
                                    <sources>
                                        <source>
                                            <location>target/config/etc/rest-adapter-service</location>
                                        </source>
                                    </sources>
                                </mapping>
                            </mappings>
                            <preinstallScriptlet>
                                <scriptFile>src/main/packages/systemd/preinstall</scriptFile>
                                <fileEncoding>utf-8</fileEncoding>
                            </preinstallScriptlet>
                            <postinstallScriptlet>
                                <script>%systemd_post %{name}.service</script>
                            </postinstallScriptlet>
                            <preremoveScriptlet>
                                <script>%systemd_preun %{name}.service</script>
                            </preremoveScriptlet>
                            <postremoveScriptlet>
                                <script>%systemd_postun_with_restart %{name}.service</script>
                            </postremoveScriptlet>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>package-trusty</id>
            <activation>
                <property>
                    <!-- -Ddeb-build to create both Ubuntu packages -->
                    <name>deb-build</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>jdeb</artifactId>
                        <groupId>org.vafer</groupId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>pkg-trusty</id>
                                <!-- moved to install-phase to allow verify-phase failure to prevent packaging-->
                                <phase>install</phase>
                                <goals>
                                    <goal>jdeb</goal>
                                </goals>
                                <configuration>
                                    <deb>[[buildDir]]/trusty/[[artifactId]]_[[version]]_trusty_all.[[extension]]</deb>
                                    <controlDir>${project.basedir}/target/packages/deb/control-trusty</controlDir>
                                    <verbose>true</verbose>
                                    <snapshotExpand>true</snapshotExpand>
                                    <dataSet>
                                        <data>
                                            <src>target/rest-adapter-service-${project.version}.war</src>
                                            <dst>/usr/lib/rest-adapter-service/rest-adapter-service.war</dst>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <filemode>640</filemode>
                                                <user>root</user>
                                                <group>rest-adapter-service</group>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>target/config</src>
                                            <type>directory</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <filemode>640</filemode>
                                                <user>root</user>
                                                <group>rest-adapter-service</group>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>src/main/packages/deb/upstart/${project.artifactId}.conf</src>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/etc/init</prefix>
                                                <filemode>644</filemode>
                                                <user>root</user>
                                                <group>root</group>
                                            </mapper>
                                        </data>
                                    </dataSet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>package-xenial</id>
            <activation>
                <property>
                    <!-- -Ddeb-build to create both Ubuntu packages -->
                    <name>deb-build</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>jdeb</artifactId>
                        <groupId>org.vafer</groupId>
                        <version>1.5</version>
                        <executions>
                            <execution>
                                <id>pkg-xenial</id>
                                <!-- moved to install-phase to allow verify-phase failure to prevent packaging-->
                                <phase>install</phase>
                                <goals>
                                    <goal>jdeb</goal>
                                </goals>
                                <configuration>
                                    <controlDir>${project.basedir}/target/packages/deb/control-xenial</controlDir>
                                    <deb>[[buildDir]]/xenial/[[artifactId]]_[[version]]_xenial_all.[[extension]]</deb>
                                    <verbose>true</verbose>
                                    <snapshotExpand>true</snapshotExpand>
                                    <dataSet>
                                        <data>
                                            <src>target/rest-adapter-service-${project.version}.war</src>
                                            <dst>/usr/lib/rest-adapter-service/rest-adapter-service.war</dst>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <filemode>640</filemode>
                                                <user>root</user>
                                                <group>rest-adapter-service</group>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>target/config</src>
                                            <type>directory</type>
                                            <conffile>true</conffile>
                                            <mapper>
                                                <type>perm</type>
                                                <filemode>640</filemode>
                                                <user>root</user>
                                                <group>rest-adapter-service</group>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>src/main/packages/systemd/rest-adapter-service</src>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/usr/bin</prefix>
                                                <filemode>755</filemode>
                                                <user>root</user>
                                                <group>root</group>
                                            </mapper>
                                        </data>
                                        <data>
                                            <src>src/main/packages/systemd/rest-adapter-service.service</src>
                                            <type>file</type>
                                            <mapper>
                                                <type>perm</type>
                                                <prefix>/usr/lib/systemd/system</prefix>
                                                <filemode>644</filemode>
                                                <user>root</user>
                                                <group>root</group>
                                            </mapper>
                                        </data>
                                    </dataSet>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>encryptedProfile</id>
            <!-- use -Dencrypted to activate this profile -->
            <activation>
                <property>
                    <name>encrypted</name>
                </property>
            </activation>
            <properties>
                <adapter.profile.dir>encrypted</adapter.profile.dir>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/profiles/encrypted</directory>
                        <filtering>true</filtering>
                    </resource>
                    <resource>
                        <directory>src/main/resources-bin</directory>
                        <filtering>false</filtering>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>plaintextProfile</id>
            <!-- profile is active unless -Dencrypted is used -->
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>!encrypted</name>
                </property>
            </activation>
            <properties>
                <adapter.profile.dir>plaintext</adapter.profile.dir>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/profiles/plaintext</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>itest</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe.version}</version>
                        <configuration>
                            <argLine>${failsafeArgLine}</argLine>
                            <systemProperties>
                                <property>
                                    <name>log4j.configuration</name>
                                    <value>test-log4j.xml</value>
                                </property>
                                <property>
                                    <name>consumerPath</name>
                                    <value>${project.build.finalName}</value>
                                </property>
                                <!-- customize spring boot port -->
                                <property>
                                    <name>server.port</name>
                                    <value>9898</value>
                                </property>
                                <property>
                                    <name>propertiesDirectory</name>
                                    <value>${project.basedir}/target/integration-test-profile</value>
                                </property>
                            </systemProperties>
                            <encoding>UTF-8</encoding>
                            <!-- to make test recording and playback easier -->
                            <runOrder>alphabetical</runOrder>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- starts hoverfly docker container for recording -->
            <id>hoverfly-record</id>
            <build>
                <plugins>
                    <!-- plugins bound to same phase are executed in the order they appear in pom.xml
                    https://stackoverflow.com/a/47475213/1469083
                    so order of post-integration-test is 1. rest-request 2. docker stop -->
                    <plugin>
                        <groupId>com.github.cjnygard</groupId>
                        <artifactId>rest-maven-plugin</artifactId>
                        <version>0.1.4</version>
                        <configuration>
                            <endpoint>http://localhost:8888</endpoint>
                            <resource>api/v2/simulation</resource>
                            <method>GET</method>
                            <outputDir>${project.basedir}/src/test/hoverfly</outputDir>
                            <outputFilename>simulation.json</outputFilename>
                        </configuration>
                        <executions>
                            <execution>
                                <id>rest-request</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>rest-request</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.26.1</version>

                        <configuration>
                            <images>
                                <image>
                                    <name>%g%a_hoverfly</name>
                                    <build>
                                        <dockerFileDir>${project.basedir}/src/test/docker</dockerFileDir>
                                        <dockerFile>hoverfly-Dockerfile</dockerFile>
                                    </build>
                                    <alias>${project.artifactId}-integration-test-hoverfly</alias>
                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <cmd>-capture</cmd>
                                        <ports>
                                            <port>8500:8500</port>
                                            <port>8888:8888</port>
                                        </ports>
                                        <wait>
                                            <http>
                                                <url>http://localhost:8888</url>
                                                <status>200</status>
                                            </http>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe.version}</version>
                        <configuration>
                            <systemPropertyVariables>
                                <javax.net.ssl.trustStore>${project.basedir}/src/test/hoverfly/hoverfly-truststore.jks</javax.net.ssl.trustStore>
                                <javax.net.ssl.trustStoreType>JKS</javax.net.ssl.trustStoreType>
                                <javax.net.ssl.trustStorePassword>hoverfly</javax.net.ssl.trustStorePassword>
                                <useHoverflyProducerProxy>true</useHoverflyProducerProxy>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- starts hoverfly docker container for playback -->
            <id>hoverfly-playback</id>
            <build>
                <plugins>
                    <!-- plugins bound to same phase are executed in the order they appear in pom.xml
                    https://stackoverflow.com/a/47475213/1469083
                    order of pre-integration-test is 1. docker start 2. rest PUT simulation.json -->
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.26.1</version>

                        <configuration>
                            <images>
                                <image>
                                    <name>%g%a_hoverfly</name>
                                    <alias>${project.artifactId}-integration-test-hoverfly</alias>
                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>8500:8500</port>
                                            <port>8888:8888</port>
                                        </ports>
                                        <wait>
                                            <http>
                                                <url>http://localhost:8888</url>
                                                <status>200</status>
                                            </http>
                                        </wait>
                                    </run>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.github.cjnygard</groupId>
                        <artifactId>rest-maven-plugin</artifactId>
                        <version>0.1.4</version>
                        <configuration>
                            <fileset>
                                <directory>${project.basedir}/src/test/hoverfly</directory>
                                <includes>
                                    <include>simulation.json</include>
                                </includes>
                            </fileset>
                            <endpoint>http://localhost:8888</endpoint>
                            <resource>api/v2/simulation</resource>
                            <method>PUT</method>
                        </configuration>
                        <executions>
                            <execution>
                                <id>rest-request</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>rest-request</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe.version}</version>
                        <configuration>
                            <systemPropertyVariables>
                                <javax.net.ssl.trustStore>${project.basedir}/src/test/hoverfly/hoverfly-truststore.jks</javax.net.ssl.trustStore>
                                <javax.net.ssl.trustStoreType>JKS</javax.net.ssl.trustStoreType>
                                <javax.net.ssl.trustStorePassword>hoverfly</javax.net.ssl.trustStorePassword>
                                <useHoverflyProducerProxy>true</useHoverflyProducerProxy>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
    <repositories>
        <repository>
            <id>niis-repo</id>
            <name>NIIS's Maven repository</name>
            <url>https://artifactory.niis.org/xroad-maven-releases</url>
        </repository>
        <repository>
            <id>niis-snapshot-repo</id>
            <name>NIIS's snapshot Maven repository</name>
            <url>https://artifactory.niis.org/xroad-maven-snapshots</url>
        </repository>
    </repositories>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
</project>
