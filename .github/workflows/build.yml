# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build and Test

on:
  push:
    branches: [ "master", "develop", "XRDDEV-2907" ]
  pull_request:
#    branches: [ "master", "develop" ]

jobs:
  BuildWithUnitTests:
    name: Build, test and package code
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/develop' }}
          gradle-home-cache-cleanup: true
          dependency-graph: generate-and-submit
          add-job-summary-as-pr-comment: always

      - name: Build and test source
        working-directory: ./adapter
        run: |
          gradle wrapper --gradle-version 8.13
          ./gradlew build intTest jacocoTestReport -Pencrypted
          cd build/resources/main/resources-bin
          ls -lah

      - name: Test report
        env:
          NODE_OPTIONS: '--max-old-space-size=6144'
        uses: dorny/test-reporter@v2
        if: success() || failure()
        with:
          name: Unit tests
          path: adapter/**/build/test-results/**/TEST-*.xml
          reporter: java-junit
          list-suites: 'failed'
          list-tests: 'failed'

      # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
      # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
      #
      # - name: Setup Gradle
      #   uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      #   with:
      #     gradle-version: '8.9'
      #
      # - name: Build with Gradle 8.9
      #   run: gradle build

